import telebot
from telebot import types
from xml.etree import ElementTree
import config

bot = telebot.TeleBot(config.token)


@bot.message_handler(commands=['start'])
def start(message):
    try:
        tree = ElementTree.parse('users.xml')  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ä–µ–≤–∞
    except FileNotFoundError:  # –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç
        with open('users.xml', 'w'):
            start(message)
    except ElementTree.ParseError:  # –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π
        root = ElementTree.Element('User_list')  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–Ω—è
        tree = ElementTree.ElementTree(root)  # —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ä–µ–≤–∞
        tree.write('users.xml')
    user_list = tree.getroot()  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–Ω—è
    s = 0
    for user in user_list:  # –ø–æ—à–∞–≥–æ–≤–æ –ø–æ —é–∑–µ—Ä–∞–º
        if user.attrib.get('id') == str(message.from_user.id):  # –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
            s += 1
            if s > 1:  # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —é–∑–µ—Ä–æ–≤
                user_list.remove(user)
                tree.write('users.xml', encoding="UTF-8")
            elif user.find('Stop').get('name') is not None:  # –µ—Å—Ç—å –ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
                stops = ''
                for i, stop in enumerate(user.findall('Stop')):
                    stops += str(i + 1) + ' - ' + ''.join(stop.get('name')) + '\n'
                keyboard = types.InlineKeyboardMarkup(row_width=1)
                buttons = [(types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—Éüöè‚úÖ', callback_data='button_select')),
                           (types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—Éüöè‚ûï', callback_data='button_add'))]
                keyboard.add(buttons[0], buttons[1])
                bot.send_message(message.from_user.id, f'–í–∞—à–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:\n{stops}', reply_markup=keyboard)
            elif user.find('Stop').get('name') is None:
                keyboard = types.InlineKeyboardMarkup(row_width=1)
                button = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—Éüöè‚ûï', callback_data='button_add')
                keyboard.add(button)
                bot.send_message(message.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–æ–∫', reply_markup=keyboard)
    if s == 0:  # –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç
        user = ElementTree.SubElement(user_list, 'User', id=str(message.from_user.id))
        stop = ElementTree.SubElement(user, 'Stop')
        bus = ElementTree.SubElement(stop, 'Bus')
        time_before_arrival = ElementTree.SubElement(bus, 'time_before_arrival')
        time_interval = ElementTree.SubElement(bus, 'time_interval')
        tree.write('users.xml')
        start(message)


# @bot.callback_query_handlers(func=lambda callback: callback.data)
# def callback_button(callback):
#     if callback == 'button_add':
#         bot.send_message(callback.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–æ–∫')


bot.infinity_polling()
